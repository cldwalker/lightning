#This class generates shell scripts from a configuration.
class Lightning
  module Generator
    extend self

    def generate_completions(generated_file=nil)
      Lightning::Cli.read_config
      generated_file ||= Lightning.config[:generated_file]
      output = generate(Lightning.config[:shell], Lightning.commands.values)
      File.open(generated_file, 'w'){|f| f.write(output) }
      output
    end
          
    def generate(*args)
      shell = args.shift
      send("#{shell}_generator", *args)
    end
    
    def bash_generator(commands)
      body = <<-INIT
      #### This file was generated by Lightning. ####
      #LBIN_PATH="$PWD/bin/" #only use for development
      LBIN_PATH="" 
      
      INIT
      commands.each do |e|
        body += <<-EOS
          
          #{'#' + e['description'] if e['description']}
          #{e['name']} () {
            if [ -z "$1" ]; then
              echo "No arguments given"
              return
            fi
            FULL_PATH="`${LBIN_PATH}lightning-translate #{e['name']} $@`#{e['post_path'] if e['post_path']}"
            if [ $1 == '#{Lightning::TEST_FLAG}' ]; then
              CMD="#{e['shell_command']} '$FULL_PATH'#{' '+ e['add_to_command'] if e['add_to_command']}"
              echo $CMD
            else
              #{e['shell_command']} $FULL_PATH#{' '+ e['add_to_command'] if e['add_to_command']}
            fi
          }
          complete -o default -C "${LBIN_PATH}lightning-complete #{e['name']}" #{e['name']}
        EOS
      end
      body.gsub(/^\s{6,10}/, '')
    end
  end
end
